// Topological Sort 
// u shuold come before v 
// This only works for DAG (Directed Acyclic Graph)

#include <bits/stdc++.h>
using namespace std;

void getTopo(int node, vector<bool> &vis, vector<int> adj[], vector<int> &topo){
    vis[node] = 1;
    for(auto it:adj[node]){
        if(!vis[it]){
            getTopo(it, vis, adj, topo);
        }
    }
    topo.push_back(node);
}

vector<int> topoList(int n, vector<int> adj[]){
    vector<bool> vis(n+1, 0);
    vector<int> topo; 
    for(int i=0;i<n;i++){
        if(!vis[i]){
            getTopo(i, vis, adj, topo);
        }
    }
    return topo;
}

int main(){
    int n, m;
    cin >> n >> m;
    
    vector<int> adj[n+1];
    for(int i=0;i<m;i++){
        int u, v;
        cin >> u >> v;
        
        adj[u].push_back(v);
    }
    
    vector<int> v = topoList(n, adj);
    int k = v.size();
    for(int i=k-1;i>=0;i--){
        cout << v[i] << " ";
    }
    return 0;
}

// Input ::
6 6
2 3
3 1
4 1
4 0
5 0
5 2

// Output
5 4 2 3 1 0 