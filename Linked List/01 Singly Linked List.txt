// Single Linked List

#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* next;
    Node(int data){
        this->data = data;
        next = NULL;
    }
};

void insertSLL(Node* &head, int pos, int data){
    Node* newNode = new Node(data);
    
    if(head==NULL){
        head = newNode;
        return;
    }
    
    if(pos==1){
        newNode->next = head;
        head = newNode;
        return;
    }
    
    Node* curr = head;
    int cnt = 1;
    while(curr->next!=NULL && cnt<pos-1){
        curr = curr->next;
        cnt++;
    }
    
    Node* tmp = curr->next;
    curr->next = newNode;
    newNode->next = tmp;
}

void deleteSLL(Node* &head, int pos){
    if(head==NULL){
        cout << "Linked List empty, Nothing to delete";
        return;
    }
    
    if(pos==1){
        Node* tmp = head;
        head = head->next;
        tmp->next = NULL;
        delete(tmp);
        return;
    }
    
    
    Node *prev=NULL, *curr = head;
    int cnt=1;
    while(curr->next!=NULL && cnt<pos){
        prev = curr;
        curr = curr->next;
        cnt++;
    }
    
    if(curr->next==NULL){
        prev->next = NULL;
        delete(curr);
        return;
    }
    
    prev->next = curr->next;
    curr->next = NULL;
    delete(curr);
}

void printSLL(Node* head){
    Node* tmp = head;
    while(tmp){
        cout << tmp->data << " ";
        tmp = tmp->next;
    }
}

int main(){
    Node* head = NULL;
    
    insertSLL(head, 1, 10);
    insertSLL(head, 1, 5);
    insertSLL(head, 3, 15);
    insertSLL(head, 3, 12);
    
    printSLL(head);
    
    deleteSLL(head, 2);
    
    cout << endl;
    printSLL(head);
    return 0;
}
