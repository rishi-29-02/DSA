// Implement the Doubly Linked List  

#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node *prev, *next;
    Node(int data){
        this->data = data;
        prev = next = NULL;
    }
};

void insertDLL(Node* &head, Node* &tail, int pos, int k){
    Node* newNode = new Node(k);
    
    if(head==NULL){
        head = newNode;
        tail = newNode;
        return;
    }
    
    if(pos==1){
        newNode->next = head;
        head->prev = newNode;
        head = newNode;
        return;
    }
    
    Node *prevNode=NULL, *curr=head;
    int cnt=1;
    while(curr!=NULL && cnt<pos){
        prevNode = curr;
        curr = curr->next;
        cnt++;
    }
    
    if(curr == NULL){
        tail->next = newNode;
        newNode->prev = tail;
        tail = newNode;
        return;
    }
    
    newNode->next = prevNode->next;
    prevNode->next = newNode;
    newNode->prev = prevNode;
    curr->prev = newNode;
}

void deleteDLL(Node* &head, Node* &tail, int pos){
    
    if(head==NULL){
        cout << "Linked List is empty";
        return;
    }
    
    if(pos==1){
        Node* tmp = head;
        Node* nextNode = tmp->next;
        if(nextNode==NULL){   
            head = NULL;
            tail = NULL;
            return;
        }
        tmp->next = NULL;
        nextNode->prev = NULL;
        head = nextNode;
        delete(tmp);
        return;
    }
    
    Node* prevNode = NULL, *curr = head;
    int cnt = 1;
    while(curr->next!=NULL && cnt<pos){
        prevNode = curr;
        curr = curr->next;
        cnt++;
    }
    
    if(curr->next==NULL){
        prevNode->next = NULL;
        curr->prev = NULL;
        tail = prevNode;
        delete(curr);
        return;
    }
    
    prevNode->next = curr->next;
    curr->next->prev = prevNode;
    curr->prev = NULL;
    curr->next = NULL;
    delete(curr);
}


void printDLL(Node* head){
    if(head==NULL){
        cout << "Linked List is empty";
        return;
    }
    
    Node* tmp = head;
    while(tmp!=NULL){
        cout << tmp->data << " ";
        tmp = tmp->next;
    }
}

int main(){
    Node* head = NULL;
    Node* tail = NULL;
    
    insertDLL(head, tail, 1, 10);
    insertDLL(head, tail, 1, 5);
    insertDLL(head, tail, 2, 8);
    insertDLL(head, tail, 4, 15);
    
    printDLL(head);
    
    deleteDLL(head, tail, 2);
    
    cout << endl;
    printDLL(head);
    return 0;
}