// Search in BST 

#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left;
    Node* right;
    Node(int data){
        this->data = data;
        left = NULL;
        right = NULL;
    }
};

Node* searchBST(Node* root, int key){
    if(root==NULL){
        return NULL;
    }
    
    if(root->data == key){
        return root;
    }
    
    if(key<root->data){
        return searchBST(root->left, key);
    }
    return searchBST(root->right, key);
}


int main(){
    Node* root = new Node(4);
    
    root->left = new Node(2);
    root->right = new Node(5);
    
    root->left->left = new Node(1);
    root->right->right = new Node(6);
    
    int key = 15;
    
    if(searchBST(root, key)==NULL){
        cout << "Key doesn't exist";
    }
    else{
        cout << "Key exists";
    }
    return 0;
}