//Faltten a binary tree with n nodes

#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left;
    Node* right;
    Node(int data){
        this->data = data;
        left = NULL;
        right = NULL;
    }
};

void flatten(Node* root){
    if(root==NULL || (root->left==NULL && root->right==NULL)){
        return;
    }
    
    if(root->left!=NULL){
        flatten(root->left);
        
        Node* temp = root->right;
        
        root->right = root->left;
        root->left = NULL;
        
        Node* t = root->right;
        while(t->right!=NULL){
            t = t->right;
        }
        
        t->right = temp;
    }
    
    flatten(root->right);
}

void inOrder(Node* root){
    if(root==NULL){
        return;
    }
    
    inOrder(root->left);
    cout << root->data << " ";
    inOrder(root->right);
}

int main(){
    Node* root = new Node(1);
    
    root->left = new Node(2);
    root->right = new Node(3);
    
    root->right->left = new Node(4);
    root->right->right = new Node(5);
    
    flatten(root);
    inOrder(root);
    return 0;
}