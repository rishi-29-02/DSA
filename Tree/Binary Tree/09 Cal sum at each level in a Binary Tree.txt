// calaculate sum at each level in a binary tree

#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left;
    Node* right;
    Node(int data){
        this->data = data;
        left = NULL;
        right = NULL;
    }
};

int height(Node* root){
    if(root==NULL){
        return 0;
    }
    
    int lh = height(root->left);
    int rh = height(root->right);
    
    return max(lh, rh) + 1;
}


void calaculatesum(Node* root, int level, int sum[]){
    if(root==NULL){
        return;
    }
    
    sum[level]+=root->data;
    
    calaculatesum(root->left, level+1, sum);
    calaculatesum(root->right, level+1, sum);
}


int main(){
    Node* root = new Node(1);
    
    root->left = new Node(2);
    root->right = new Node(3);
    
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    
    root->right->left = new Node(6);
    root->right->right = new Node(7);
    
    int levels = height(root);
    
    int sum[levels] = {0};
    
    calaculatesum(root, 0, sum);
    
    for(int i=0;i<levels;i++){
        cout << sum[i] << " ";
    }
    
    return 0;
}