#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left;
    Node* right;
    
    Node(int data){
        this->data = data;
        left = NULL;
        right = NULL;
    }
};

int search(int inOrder[], int st, int ed, int curr){
    for(int i=st;i<=ed;i++){
        if(inOrder[i]==curr){
            return i;
        }
    }
    return -1;
}

Node* buildTree(int preOrder[], int inOrder[], int st, int end){
    if(st>end){
        return NULL;
    }
    
    static int idx = 0;
    int curr = preOrder[idx];
    idx++;
    
    Node* node = new Node(curr);
    if(st==end){
        return node;
    }
    
    int pos = search(inOrder, st, end, curr);
    node->left = buildTree(preOrder, inOrder, st, pos-1);
    node->right = buildTree(preOrder, inOrder, pos+1, end);
    
    return node;
}

void inOrderPrint(Node* root){
    if(root==NULL){
        return;
    }
    
    inOrderPrint(root->left);
    cout << root->data << "->";
    inOrderPrint(root->right);
}

int main(){
    int preOrder[] = {1, 2, 4, 3, 5};
    int inOrder[] = {4, 2, 1, 5, 3};
    
    Node* root = buildTree(preOrder, inOrder, 0, 4);
    inOrderPrint(root);
    return 0;
}