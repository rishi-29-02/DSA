// Maximum path sum in a binary tree

#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left;
    Node* right;
    Node(int data){
        this->data = data;
        left = NULL;
        right = NULL;
    }
};

int maxPathSum(Node* root, int &maxi){
    if(root==NULL){
        return 0;
    }
    
    int leftSum = max(0, maxPathSum(root->left, maxi));
    int rightSum = max(0, maxPathSum(root->right, maxi));
    
    maxi = max(maxi, root->data + leftSum + rightSum);
    
    return root->data + max(leftSum, rightSum);
}

int main(){
    Node* root = new Node(-10);
    
    root->left = new Node(2);
    root->right = new Node(6);
    
    root->right->left = new Node(3);
    root->right->right = new Node(4);
    
    int maxi = INT_MIN;
    maxPathSum(root, maxi);
    cout << maxi;
    return 0;
}