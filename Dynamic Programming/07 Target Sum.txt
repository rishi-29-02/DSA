// Target Sum
// Given a list of non-negative integers, a1, a2, ..., an, and a target, S. 
// Now you have 2 symbols + and -. For each integer, you should choose one 
// from + and - as its new symbol.
// Find out how many ways to assign symbols to make sum of integers equal to target S.

// This is similar to the count the subsets with the given difference

#include <bits/stdc++.h>
using namespace std;

int count(int arr[], int n, int s){
    int dp[n+1][s+1];
    
    for(int i=0;i<=n;i++){
        for(int j=0;j<=s;j++){
            if(i==0){
                dp[i][j] = false;
            }
            if(j==0){
                dp[i][j] = true;
            }
        }
    }
    
    for(int i=1;i<=n;i++){
        for(int j=1;j<=s;j++){
            if(arr[i-1]<=j){
                dp[i][j] = dp[i-1][j-arr[i-1]] + dp[i-1][j];
            }
            if(arr[i-1]>j){
                dp[i][j] = dp[i-1][j];
            }
        }
    }
    return dp[n][s];
}

int main(){
    int arr[] = {1, 1, 1, 1, 1};
    int n = sizeof(arr)/sizeof(arr[0]);
    
    int k=3;
    int sum=0;
    for(int i=0;i<n;i++){
        sum+=arr[i];
    }
    
    int s = (sum+k)/2;
    
    cout << count(arr, n, s);
    return 0;
}