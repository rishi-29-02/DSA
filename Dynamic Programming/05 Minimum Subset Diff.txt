// Minimum Subset Sum difference
// Given a set of integers, the task is to divide it into two sets S1 and S2 such 
// that the absolute difference between their sums is minimum.

#include <bits/stdc++.h>
using namespace std;

int gets1(int arr[], int n, int W){
    bool dp[n+1][W+1];
    
    for(int i=0;i<=n;i++){
        for(int j=0;j<=W;j++){
            if(i==0){
                dp[i][j] = false;
            }
            if(j==0){
                dp[i][j] = true;
            }
        }
    }
    
    for(int i=1;i<=n;i++){
        for(int j=1;j<=W;j++){
            if(arr[i-1]<=j){
                dp[i][j] = dp[i-1][j-arr[i-1]] || dp[i-1][j];
            }
            else if(arr[i-1]>j){
                dp[i][j] = dp[i-1][j];
            }
        }
    }
    
    vector<int> v;
    for(int j=0;j<=W/2;j++){
        if(dp[n][j]){
            v.push_back(j);
        }
    }
    return v[v.size()-1];
}

int main(){
    int arr[] = {1, 6, 11, 5};
    int n = sizeof(arr)/sizeof(arr[0]);
    
    int sum = 0;
    for(int i=0;i<n;i++){
        sum+=arr[i];
    }
    
    int s1 = gets1(arr, n, sum);
    cout << sum - 2*s1;
    return 0;
}