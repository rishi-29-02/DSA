// Coin Change Problem II 
// Minimum Number of coins to make 

#include <bits/stdc++.h>
using namespace std;

int minCoins(int coins[], int n, int W){
    int dp[n+1][W+1];
    
    for(int i=0;i<=n;i++){
        for(int j=0;j<=W;j++){
            if(i==0){
                dp[i][j] = 0;
            }
            if(j==0){
                dp[i][j] = INT_MAX-1;
            }
        }
    }
    
    for(int j=1;j<=W;j++){
        if(j%coins[0]==0){
            dp[1][j] = j/coins[0]; 
        }
        else{
            dp[1][j] = INT_MAX-1;
        }
    }
    
    for(int i=2;i<=n;i++){
        for(int j=1;j<=W;j++){
            if(coins[i-1]<=j){
                dp[i][j] = min(1+dp[i][j-coins[i-1]], dp[i-1][j]);
            }
            else if(coins[i-1]>j){
                dp[i][j] = dp[i-1][j];
            }
        }
    }
    return dp[n][W];
}

int main(){
    int coins[] = {25, 10, 5};
    int n = sizeof(coins)/sizeof(coins[0]);
    
    int N = 30;
    cout << minCoins(coins, n, N);
    
    return 0;
}